# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Profs_assign.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
import New_take


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")

        self.Profs_tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.Profs_tableWidget.setAlternatingRowColors(True)
        self.Profs_tableWidget.setObjectName("Profs_tableWidget")
        self.Profs_tableWidget.setColumnCount(5)
        self.Profs_tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.Profs_tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Profs_tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Profs_tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Profs_tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Profs_tableWidget.setHorizontalHeaderItem(4, item)
        self.verticalLayout.addWidget(self.Profs_tableWidget)

        for i in range(len(New_take.PROFS_DF)):
            index = self.Profs_tableWidget.rowCount()
            self.Profs_tableWidget.setRowCount(index + 1)
            self.Profs_tableWidget.setItem(index, 0, QtWidgets.QTableWidgetItem(str(New_take.PROFS_DF.iloc[i].name)))
            self.Profs_tableWidget.setItem(index, 1, QtWidgets.QTableWidgetItem(str(New_take.PROFS_DF.iloc[i].Total_Hours)))
            self.Profs_tableWidget.setItem(index, 2, QtWidgets.QTableWidgetItem(str(New_take.PROFS_DF.iloc[i].Assigned_Hours)))
            self.Profs_tableWidget.item(index, 2).setFlags(QtCore.Qt.ItemIsEnabled)
            self.Profs_tableWidget.setItem(index, 3, QtWidgets.QTableWidgetItem(str(New_take.PROFS_DF.iloc[i].Sup)))
            # self.Profs_tableWidget.setItem(index, 4, QtWidgets.QTableWidgetItem(str(New_take.PROFS_DF.iloc[i].Subject)))

            comboBox = QtWidgets.QComboBox()
            for sub in New_take.SUBJECTS:
                comboBox.addItem(sub)
            self.Profs_tableWidget.setCellWidget(i, 4, comboBox)
            comboBox.setCurrentIndex(New_take.SUBJECTS.index(New_take.PROFS_DF.iloc[i].Subject))




        self.Add_pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.Add_pushButton.setObjectName("Add_pushButton")
        self.Add_pushButton.clicked.connect(self.add_button)
        self.verticalLayout.addWidget(self.Add_pushButton)

        self.Delete_pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.Delete_pushButton.setObjectName("Delete_pushButton")
        self.Delete_pushButton.clicked.connect(lambda: self.delete(self.Profs_tableWidget.currentRow()))
        self.verticalLayout.addWidget(self.Delete_pushButton)

        self.Save_pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.Save_pushButton.setObjectName("Save_pushButton")
        self.Save_pushButton.clicked.connect(self.save_button)
        self.verticalLayout.addWidget(self.Save_pushButton)


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        item = self.Profs_tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Nom"))
        item = self.Profs_tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Heures_Totales"))
        item = self.Profs_tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Heures_Assignées"))
        item = self.Profs_tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Heures_Sup"))
        item = self.Profs_tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Matières"))
        self.Add_pushButton.setText(_translate("MainWindow", "Add"))
        self.Save_pushButton.setText(_translate("MainWindow", "Save"))
        self.Delete_pushButton.setText(_translate('MainWindow', 'Delete'))

    def add_button(self):
        self.Profs_tableWidget.setRowCount(self.Profs_tableWidget.rowCount() + 1)
        hours_item = QtWidgets.QTableWidgetItem("0.0")
        self.Profs_tableWidget.setItem(self.Profs_tableWidget.rowCount() - 1, 2, hours_item)
        hours_item.setFlags(QtCore.Qt.ItemIsEnabled)
        comboBox = QtWidgets.QComboBox()
        for sub in New_take.SUBJECTS:
            comboBox.addItem(sub)
        self.Profs_tableWidget.setCellWidget(self.Profs_tableWidget.rowCount() - 1, 4, comboBox)

    def save_button(self):
        New_take.override_profs_df()
        for i in range(self.Profs_tableWidget.rowCount()):
            name_item = self.Profs_tableWidget.item(i, 0)
            hours_item = self.Profs_tableWidget.item(i, 1)
            sup_item = self.Profs_tableWidget.item(i, 3)
            subject_item = self.Profs_tableWidget.cellWidget(i, 4)
            if name_item and name_item.text() != "" and hours_item and hours_item.text() != "" and sup_item and sup_item.text() != "":
                try:
                    eval(hours_item.text())
                    eval(sup_item.text())
                except Exception :
                    print('Could not convert to float')
                else:
                    New_take.add_new_prof(name_item.text(),
                                          eval(hours_item.text()),
                                          eval(sup_item.text()),
                                          subject_item.currentText())

                    # New_take.add_prof_to_subject(subject_item.currentText(), name_item.text())
            else:
                print('Something went wrong...')

        print(New_take.ASSIGNMENTS)
        New_take.save_to_csv(New_take.PROFS_DF, 'Data/Profs_df_out.csv')
        # New_take.save_all_subjects()

    def delete(self, row):
        subject = self.Profs_tableWidget.cellWidget(row, 4).currentText()
        name = self.Profs_tableWidget.item(row, 0).text()
        New_take.remove_prof(subject, self.Profs_tableWidget.item(row, 0).text())
        self.Profs_tableWidget.removeRow(row)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
